package myarchive;

import wsiarchive.*;
import org.junit.*;

public class EmptyArchiveAndPredicateListTest extends de.tuebingen.informatik.Test {

    // some random generators :)
    public IItemId getRandomId() {
        return ((OKPutResult) new WORM("random").put(new Item("chx", 666))).getId();
    }
    
    // Prädikate
    IItemPredicate pr1 = new MyPredicate("Item 1", 200);
    IItemPredicate pr2 = new MyPredicate("Item 2", 200);
    IItemPredicate pr3 = new MyPredicate("Item 5", 400);

    //Beispiele für Teilarchive
    limitedArchive la1 = new limitedArchive("Teilarchiv 1", new WORM("Worm"), 200);
    limitedArchive la2 = new limitedArchive("Teilarchiv 2", new WORM("Worm"), 300);
    limitedArchive la3 = new limitedArchive("Teilarchiv 3", new WORM("Worm"), 200);

    limitedArchive la4 = new limitedArchive("Teilarchiv 4", new WORM("Worm"), 300);
    // leere liste
    IArchiveAndPredicateList e = new EmptyArchiveAndPredicateList();
    
    IArchiveAndPredicateList pl1 = new PairArchiveAndPredicateList(
        pr1, la1, e);
    
    //Beispiele für Items
    Item i1 = new Item("Item 1", 200);
    Item i2 = new Item("Item 2", 300);
    Item i3 = new Item("Item 3", 400);
    Item i4 = new Item("Item 4", 100);
    
    IArchive sa = new SemanticArchive("Semantic Archive", pl1, la3);
    
        
    IItemList items = new PairItemList(
        i1, new PairItemList(
        i4, new EmptyItemList()));
    
    @Test
    public void put() {
        checkExpect(e.put(i1), new FullPutResult());
    }
    
    /*
    @Test
    public void putMultiple() {
        checkExpect(e.putMultiple(items.toWSIItemList()), new EmptyPutResultList());
    }*/
    
    @Test
    public void get() {
        checkExpect(e.get(this.getRandomId()), new NoItemResult());
    }
}
