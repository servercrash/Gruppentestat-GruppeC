package myarchive;

import wsiarchive.*;

//Eine IArchiveAndPutResultList ist entweder leer oder ein Pair
public interface IArchiveAndPutResultList {

    // Gibt ein item anhand seiner id zurück
    public IGetResult get(IItemId id);
    
    // schreibt ein item in einer der archive
    public IPutResult put(Item item);
    
    // schreibt mehrere items
    public wsiarchive.IPutResultList putMultiple(wsiarchive.IItemList items);
    
    // hängt eine liste von archiven an.
    public IArchiveAndPutResultList fillData(IArchiveList archives);
    
    //liefert ein Item ohne den Cache zu benutzen
    public IGetResult getRekursiv(IItemId id);

    //liefert ein Item indem es den Cache benutzt
    public IGetResult getCache(IItemId id);
     
    // schreibt ein item in alle teilarchive und liefert die liste der Putresults zurück
    public IPutResultList putAll(Item item);
    
    //gibt das die Items im RedundantArchiv in einer GetResultList zurück
    public IGetResult getRedundant(IItemId id);
    
    
    // liefert alle items die geschrieben werden könenn
    public IItemList getPutAble(IItemList items);
    // liefert alle items die nicht geschrieben werden können
    public IItemList getNotPutAble(IItemList items);
}
