package myarchive;

import wsiarchive.*;

// nichtleere Liste von PutResults
public class PairPutResultList implements IPutResultList {
    private IPutResult first;
    private IPutResultList rest;
    
    public PairPutResultList(IPutResult first, IPutResultList rest) {
        this.first = first;
        this.rest = rest;
    }
    
    // erstes Element extrahieren
    public IPutResult getFirst() {
        return this.first;
    }
    
    // Rest extrahieren
    public IPutResultList getRest() {
        return this.rest;
    }
    
    // in IPutResultList aus wsiarchive umwandeln
    public wsiarchive.IPutResultList toWSIPutResultList() {
        return new wsiarchive.PairPutResultList(this.first,
                                                this.rest.toWSIPutResultList());
    }
    
        
    // ist eine id in der resultlist.
    public boolean isItemIdIn(IItemId id) {
        // hat das erste resultat oder der rest die itemID
        return ((((OKPutResult) this.first).getId() == id) || this.rest.isItemIdIn(id));
    }
    
        
    // schreibt ein putresult in die liste, wenn sie noch nicht drinnen ist
    public void addPutResult(IPutResult putresult) {
        // ist das item noch nicht vorhanden f√ºge es zur liste hinzu
        if (!this.isItemIdIn(((OKPutResult) putresult).getId())) {
            this.rest = new PairPutResultList(
              putresult,
              this.rest
            );
        }
        // sonst tue halt nichts
        else {
            return;
        }
    }

}
