package myarchive;

import wsiarchive.*;

// Archiv, das nach Prädikaten entscheidet, in welches Teilarchiv geschrieben wird.
public class SemanticArchive implements IArchive {
    private String name; // Name des Archives
    private IArchiveAndPredicateList archivesAndPredicates; // Paar aus teilarchiv und item-prädikat
    private IArchive standard; // standardArchiv
    

    // Die Archive in archivesAndPredicates werden der Reihe nach durchprobiert;
    // wenn kein Prädikat passt, wird in das Archiv standard geschrieben.
    public SemanticArchive(String name, IArchiveAndPredicateList archivesAndPredicates, IArchive standard) {
        this.name = name;
        this.archivesAndPredicates = archivesAndPredicates;
        this.standard = standard;
    }

    // Name des Archivs liefern
    public String getName() {
        return this.name;
    }

    // Item ins Archiv schreiben
    public wsiarchive.IPutResult put(Item item) {
        IPutResult result =  this.archivesAndPredicates.put(item);
        if (result instanceof FullPutResult) {
            return this.standard.put(item);
        }
        else {
            return result;
        }
    }
    
    // Mehrere Items ins Archiv schreiben
    public wsiarchive.IPutResultList putMultiple(wsiarchive.IItemList items) {
        if (items instanceof wsiarchive.EmptyItemList) {
            return new wsiarchive.EmptyPutResultList();
        }
        else {
            return new wsiarchive.PairPutResultList(
                this.put(((PairItemList) items).getFirst()),
                this.putMultiple(((wsiarchive.PairItemList) items).getRest())
            );
        }
    }
    
    // Item aus Archiv auslesen
    public wsiarchive.IGetResult get(IItemId id) {
        return null;
    }
}
