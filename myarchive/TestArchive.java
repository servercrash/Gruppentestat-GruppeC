package myarchive;

import wsiarchive.*;

// Eine Klasse welche sich wie ein Archiv verhällt aber die put putmultiple und get aufrufe zählt
// das ist sinnvoll für testfälle usw.
public class TestArchive implements IArchive, IMyArchive{
    private int countPut; // Zähler für put
    private int countGet; // Zähler für get
    private int countPutMultiple; // Zähler für putMultiple
    private IArchive archive; // das eigentliche Archiv
    private String name; // name des archives
    
    TestArchive(String name, IArchive archive) {
        this.name = name;
        this.countPut = 0;
        this.countGet = 0;
        this.archive = archive;
    }

    // Name des Archivs liefern
    public String getName() {
        return this.name;
    }
    
    // gibt den get counter zurück
    public int getCountGet() {
        return this.countGet;
    }
    // gibt den put counter zurück
    public int getCountPut() {
        return this.countPut;
    }
    // gibt den put counter zurück
    public int getCountPutMultiple() {
        return this.countPut;
    }
    // resetet get counter
    public void resetCountGet() {
        this.countGet = 0;
    }
    // resetet put counter
    public void resetCountPut() {
        this.countPut = 0;
    }
        // resetet put counter
    public void resetCountPutMultiple() {
        this.countPut = 0;
    }
    
    // Item ins Archiv schreiben
    public IPutResult put(Item item) {
        this.countPut++;
        return this.archive.put(item);
    }
    
    // Mehrere Items ins Archiv schreiben
    public wsiarchive.IPutResultList putMultiple(wsiarchive.IItemList items) {
        this.countPutMultiple++;
        return this.archive.putMultiple(items);
    }
    
    // Item aus Archiv auslesen
    public IGetResult get(IItemId id) {
        this.countGet++;
        return this.archive.get(id);
    }
    
    
    // liefert alle items die geschrieben werden könenn
    public IItemList getPutAble(IItemList items) {
        return ((IMyArchive) this.archive).getPutAble(items);
    }
    
    // liefert alle items die nicht geschrieben werden können
    public IItemList getNotPutAble(IItemList items) {
        return ((IMyArchive) this.archive).getPutAble(items);
    }
}
