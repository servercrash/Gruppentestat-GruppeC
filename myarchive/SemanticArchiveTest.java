package myarchive;


import org.junit.*;
import wsiarchive.*;

public class SemanticArchiveTest extends de.tuebingen.informatik.Test {
    //Beispiele für Prädikate
    IItemPredicate pr1 = new MyPredicate("Item 1", 200);
    IItemPredicate pr2 = new MyPredicate("Item 2", 200);
    IItemPredicate pr3 = new MyPredicate("Item 5", 400);

    //Beispiele für Teilarchive
    limitedArchive la1 = new limitedArchive("Teilarchiv 1", new WORM("Worm"), 200);
    limitedArchive la2 = new limitedArchive("Teilarchiv 2", new WORM("Worm"), 300);
    limitedArchive la3 = new limitedArchive("Teilarchiv 3", new WORM("Worm"), 200);

    limitedArchive la4 = new limitedArchive("Teilarchiv 4", new WORM("Worm"), 300);
    // leere liste
    IArchiveAndPredicateList e = new EmptyArchiveAndPredicateList();

    IArchiveAndPredicateList pl1 = new PairArchiveAndPredicateList(
        pr1, la1, e);
        
        IArchiveAndPredicateList pl2 = new PairArchiveAndPredicateList(
    pr2, la3, pl1);

    //Beispiele für Items
    Item i1 = new Item("Item 1", 200);
    Item i2 = new Item("Item 2", 300);
    Item i3 = new Item("Item 3", 400);
    Item i4 = new Item("Item 4", 100);
    
    IItemList il2 = new PairItemList(i1, new PairItemList(i2, new PairItemList(i3, new PairItemList(i4, new EmptyItemList()))));

    //Beispiel für ein SemanticArchiv
    IArchive sa = new SemanticArchive("Semantic Archive", pl1, la3);
    
    IArchive sa2 = new SemanticArchive("Semantic Archive2", pl2, la4);

    IItemList items = new PairItemList(
        i1, new PairItemList(
        i4, new EmptyItemList()));

    //überprüfen ob ein Result vom Typ OKPutResult ist
    public boolean isOKPutResult(IPutResult result) {
        return (result instanceof OKPutResult);
    }

    //überprüfen ob alle Resultats vom Typ OkPutResultList sind
    public boolean isOKPutResultList(wsiarchive.IPutResultList resultlist) {
        if (resultlist instanceof wsiarchive.EmptyPutResultList) {
            return true;
        }
        else {
            return this.isOKPutResult(((wsiarchive.PairPutResultList) resultlist).getFirst()) &&
                   this.isOKPutResultList(((wsiarchive.PairPutResultList) resultlist).getRest());
        }
    }
    
    @Test
    public void getPutAble() {
        checkExpect(((IMyArchive) sa).getPutAble(new PairItemList(i2, new EmptyItemList())), new EmptyItemList());
        checkExpect(((IMyArchive) sa).getPutAble(new PairItemList(i1, new EmptyItemList())), new PairItemList(i1, new EmptyItemList()));
        checkExpect(((IMyArchive) sa).getPutAble(new PairItemList(i4, new EmptyItemList())), new PairItemList(i4, new EmptyItemList()));
        checkExpect(((IMyArchive) sa2).getPutAble(il2), new PairItemList(i1, new PairItemList(i2, new EmptyItemList())));
    }
    
    @Test
    public void getNotPutAble() {
    }

    //Den Namen des Archivs zurückgeben
    @Test
    public void getName() {
        checkExpect(sa.getName(), "Semantic Archive");
    }

    //Ein Item in ein SemanticArchiv schreiben
    @Test
    public void put() {
        checkExpect(sa.put(i3), new FullPutResult());

        // i1 wird in la1 gespeichert.
        sa.put(i1);
        checkExpect(la1.getFree(), 0);
    }

    //Ein Item ins StandartArchiv schreiben
    @Test
    public void putStandard() {
        sa.put(i4);
        checkExpect(la3.getFree(), 100);
    }

    //Mehrere Items in ein SemanticArchiv schreiben
    @Test
    public void putMultiple() {
    }

    //Ein Item aus dem SemanticArchiv auslesen
    @Test
    public void get() {

        IPutResult putresult = sa.put(i1);
        checkExpect(this.isOKPutResult(putresult), true);
        OKPutResult pa = (OKPutResult) putresult;
        checkExpect(sa.get(pa.getId()), new ItemResult(i1));
    }
}
