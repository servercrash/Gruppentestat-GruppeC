package myarchive;



import wsiarchive.*;

// leere Liste von IPutResults
public class EmptyPutResultList implements IPutResultList {
    public EmptyPutResultList() {
    }
    
    // in IPutResultList aus wsiarchive umwandeln
    public wsiarchive.IPutResultList toWSIPutResultList() {
        return new wsiarchive.EmptyPutResultList();
    }

        
    // ist eine id in der resultlist.
    public boolean isItemIdIn(IItemId id) {
        return false;
    }
    
        
    // schreibt ein putresult in die liste, wenn sie noch nicht drinnen ist
    public void addPutResult(IPutResult putresult) {
        return;
    }
    
        
    // Zählt die Anzahl an OKPutResulsts in der Liste
    public int countOKPutResult() {
        return 0;
    }
    
    // Schmeißt alle fullputresulsts zurück
    public IPutResultList cleanFull() {
        return this;
    }
        
    // liefert ein zufälliges putresult zurück.
    public IPutResult getRandom() {
        throw new AssertionError("Aus einer leeren liste kann man nicht eines zufällig auswerfen");
    }
     
    // gibt das nte Item heraus
    public IPutResult getN(int n) {
        throw new AssertionError("wie können nicht das nte item aus einer leeren zurückliefern");
    }
    
    
    // hängt eine resultlist an
    public IPutResultList append(IPutResultList resultlist) {
        return resultlist;
    }
}

