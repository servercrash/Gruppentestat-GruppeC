package myarchive;
import wsiarchive.*;


// Archiv, bei dem erst ein Archiv vollgeschrieben wird, dann das nächste etc.
// dies ist ein kommentar
public class OverflowArchive implements IArchive {
    private String name;
    private IArchiveList archives;
    // private IArchiveAndItemIDList archivesandids;
    
    OverflowArchive (String name, IArchiveList archive) {
        this.name = name;
        this.archives = archives;
    }
    
    // Name des Archivs liefern
    public String getName() {
        return this.name;
    }

    // Item ins Archiv schreiben
    public wsiarchive.IPutResult put(Item item) {
        return this.putArchives(item, this.archives);
    }
    
    public wsiarchive.IPutResult putArchives(Item item, IArchiveList archives) {
        if (archives instanceof PairArchiveList) {
            PairArchiveList pa = (PairArchiveList) archives;
            IPutResult pr = pa.getFirst().put(item);
            if (pr instanceof OKPutResult) {
                return pr;
            }
            else {
                return this.putArchives(item, pa.getRest());
            }
        }
        else {
            return new FullPutResult();
        }
    }
    
    // Mehrere Items ins Archiv schreiben
    public wsiarchive.IPutResultList putMultiple(wsiarchive.IItemList items) {
        // rekursiv put ausführen
        if (items instanceof wsiarchive.EmptyItemList) {
            return new wsiarchive.EmptyPutResultList();
        }
        else {
            wsiarchive.PairItemList it1 = (wsiarchive.PairItemList) items;
            return new wsiarchive.PairPutResultList(
                this.put(it1.getFirst()),
                this.putMultiple(it1.getRest())
            );
        }
    }
    
    // Item aus Archiv auslesen
    public wsiarchive.IGetResult get(IItemId id) {
        return null;
    }
}
