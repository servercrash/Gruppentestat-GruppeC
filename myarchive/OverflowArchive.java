package myarchive;
import wsiarchive.*;


// Archiv, bei dem erst ein Archiv vollgeschrieben wird, dann das nächste etc.
public class OverflowArchive implements IArchive {
    private String name; // name des archives
    private IArchiveAndPutResultList data; // daten(archive, und cache) des archives
    
    OverflowArchive (String name, IArchiveList archives) {
        // @TODO move all archives to data
        this.data = new EmptyArchiveAndPutResultList();
        this.data = this.data.fillData(archives); 
        this.name = name;
    }
    
    // Name des Archivs liefern
    public String getName() {
        return this.name;
    }

    // Item ins Archiv schreiben
    public wsiarchive.IPutResult put(Item item) {
        return this.data.put(item);
    }
    
    // Mehrere Items ins Archiv schreiben
    // @TODO anpassugn and tollen cache.
    
    public wsiarchive.IPutResultList putMultiple(wsiarchive.IItemList items) {
        // rekursiv put ausführen
        if (items instanceof wsiarchive.EmptyItemList) {
            return new wsiarchive.EmptyPutResultList();
        }
        else {
            wsiarchive.PairItemList it1 = (wsiarchive.PairItemList) items;
            return new wsiarchive.PairPutResultList(
                this.put(it1.getFirst()),
                this.putMultiple(it1.getRest())
            );
        }
    }
    
    // Item aus Archiven auslesen
    public wsiarchive.IGetResult get(IItemId id) {
        return this.data.get(id);
    }
}
