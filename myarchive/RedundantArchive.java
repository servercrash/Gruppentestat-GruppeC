package myarchive;

import wsiarchive.*;


// Redundantes Archiv, das in mehrere Unterarchive gleichzeitig schreibt
public class RedundantArchive implements IArchive {
    private String name; // Name des Archives

    // Das Quorum sagt, auf wievielen Unterarchiven der Schreibvorgang
    // erfolgreich sein muss, damit der Gesamtschreibvorgang erfolgreich ist.
    public RedundantArchive(String name, IArchiveList archives, int quorum) {
        this.name = name;
    }
    
        // Name des Archivs liefern
    public String getName() {
        return this.name;
    }

    // Item ins Archiv schreiben
    public wsiarchive.IPutResult put(Item item) {
        return null;
    }
    
    // Mehrere Items ins Archiv schreiben
    public wsiarchive.IPutResultList putMultiple(wsiarchive.IItemList items) {
        return null;
    }
    
    // Item aus Archiv auslesen
    public wsiarchive.IGetResult get(IItemId id) {
        return null;
    }

}
