package myarchive;

import wsiarchive.*;
import org.junit.*;

public class limitedArchiveTest extends de.tuebingen.informatik.Test {

    //Beispiele für Items
    Item item1 = new Item("cck", 120); // Inhalt mit cck 120MB
    Item item2 = new Item("views", 50); // Inhalt mit Views 50MB
    Item item3 = new Item("panels", 60); // Inhalt mit Panels 60MB
    
    //Beispiel für ein Wormarchiv
    WORM w1 = new WORM("contrib"); // Neuer Worm
    
    //Beispiel für eine WORMItemId
    WORMItemId wii = new WORMItemId(); // itemid für testfälle
    
    //Den Namen des Archivs ausgeben
    @Test
    public void testGetName() {
        limitedArchive la1 = new limitedArchive("bioinformatiker", w1, 100);
        // testet die methode getName();
        checkExpect(la1.getName(), "bioinformatiker");
    }
    
    // Item ins Archiv schreiben
    @Test
    public void testPut() {
        limitedArchive la1 = new limitedArchive("bioinformatiker", w1, 100); // Archive mit 100MB
        limitedArchive la2 = new limitedArchive("bioinformatiker", w1, 100); // neue Kopie von la1
        // größeres Item als maximales Speicher -> geht nicht rein
        checkExpect(la1.put(item1), new wsiarchive.FullPutResult());
        // item was genug klein ist zum speichern
        checkExpect(la1.put(item2), new wsiarchive.OKPutResult(wii));
        // zusammen 100MB // genau voll
        checkExpect(la1.put(item2), new wsiarchive.OKPutResult(wii));
        
        // diesmal fügen wir erst views und dann panels hinzu -> panels ist zu groß
        checkExpect(la2.put(item2), new wsiarchive.OKPutResult(wii));
        checkExpect(la2.put(item3), new wsiarchive.FullPutResult());
    }
    
    // Item aus Archiv auslesen
    @Test
    public void testGet() {
        limitedArchive la1 = new limitedArchive("bioinformatiker", w1, 100); // Archive mit 100MB
        limitedArchive la2 = new limitedArchive("bioinformatiker", w1, 100); // Archive mit 100MB
        
        IPutResult r = la1.put(item2);
        // PutResult ist ok.
        OKPutResult r1 = (OKPutResult) r;
        
        // Nun können wir aus r1 die ITEMID auslesen und schauen ob get item2 zurückliefert
        IGetResult g = la1.get(r1.getId());
        // wir wissen es ist ein richtiges resultat
        ItemResult g1 = (ItemResult) g;
        checkExpect(g1.getItem(), item2);
    }
    
    // Test get Methoden für item2
    @Test
    public void testGet2() {
        limitedArchive la1 = new limitedArchive("bioinformatiker", w1, 100); // Archive mit 100MB
        limitedArchive la2 = new limitedArchive("bioinformatiker", w1, 100); // Archive mit 100MB
        
        IPutResult r = la1.put(item3);
        // PutResult ist ok.
        OKPutResult r1 = (OKPutResult) r;
        
        // Nun können wir aus r1 die ITEMID auslesen und schauen ob get item2 zurückliefert
        IGetResult g = la1.get(r1.getId());
        // wir wissen es ist ein richtiges resultat
        ItemResult g1 = (ItemResult) g;
        checkExpect(g1.getItem(), item3);
    }
    
    // Mehrere Items ins Archiv schreiben
    @Test
    public void testMultiplePut() {
        limitedArchive la1 = new limitedArchive("bioinformatiker", w1, 100); // Archive mit 100MB
        // zweimal 50MB hinzufügen
        wsiarchive.IPutResultList prl = la1.putMultiple(new wsiarchive.PairItemList(item2, new wsiarchive.PairItemList(item2, new wsiarchive.EmptyItemList())));
        PairPutResultList pr = (PairPutResultList) prl.toMyPutResultList();
        // erstes Resultat
        OKPutResult prfirst1 = (OKPutResult) pr.getFirst();

        // zweites resultat
        IPutResultList pr2 = pr.getRest();
        PairPutResultList pr2_ = (PairPutResultList) pr2;
        OKPutResult pr3 = (OKPutResult) pr2_.getFirst();

        // sollte immer gut laufen
        checkExpect(prl, new wsiarchive.PairPutResultList(new OKPutResult(prfirst1.getId()), new wsiarchive.PairPutResultList(new OKPutResult(pr3.getId()), new wsiarchive.EmptyPutResultList())));

        // danach 60MB hinzufügen
        wsiarchive.IPutResultList pr10l = la1.putMultiple(new wsiarchive.PairItemList(item2, new wsiarchive.EmptyItemList()));
        // müsste dann FullPutResult zurückliefern
        checkExpect(pr10l, new wsiarchive.PairPutResultList(new FullPutResult(), new wsiarchive.EmptyPutResultList()));
    }
}
