package myarchive;


import org.junit.*;
import wsiarchive.*;



public class OverflowArchiveTest extends de.tuebingen.informatik.Test {
    //Beispiele f端r Teilarchive
    limitedArchive la1 = new limitedArchive("Teilarchiv 1", new WORM("Worm"), 200);
    limitedArchive la2 = new limitedArchive("Teilarchiv 2", new WORM("Worm"), 300);
    limitedArchive la3 = new limitedArchive("Teilarchiv 3", new WORM("Worm"), 200);

    //Beispiel f端r ein overflow-archive
    IArchiveList al1 = new PairArchiveList(la1, new PairArchiveList(la2, new PairArchiveList(la3, new EmptyArchiveList())));
    OverflowArchive oa1 = new OverflowArchive("Test 1", al1);
    
    //Beispiele f端r Items
    Item i1 = new Item("Item 1", 200);
    Item i2 = new Item("Item 2", 300);
    Item i3 = new Item("Item 3", 400);
    Item i4 = new Item("Item 4", 100);
    
    //Liste aus Items
    IItemList il1 = new PairItemList(i1, new PairItemList(i2, new PairItemList(i3, new PairItemList(i4, new EmptyItemList()))));
    
    //den Namen einer Liste zur端ckliefern
    @Test
    public void getNameTest(){
        checkExpect(oa1.getName(), "Test 1");
    }
    
    // Ist das Resultat vom typ OKPutResult
    public boolean isOKPutResult(IPutResult result) {
        return (result instanceof OKPutResult);
    }
    
    //Items in ein Archiv speichern
    @Test
    public void putTest(){ 
        IPutResult r1 = oa1.put(i1);
        checkExpect(this.isOKPutResult(r1), true);
        OKPutResult id1 = (OKPutResult) r1;
        checkExpect(id1, new OKPutResult(id1.getId()));
        
        OKPutResult id2 = (OKPutResult) oa1.put(i2);
        checkExpect(id2, new OKPutResult(id2.getId()));
        
        checkExpect(oa1.put(i3), new FullPutResult());
        
        OKPutResult id4 = (OKPutResult) oa1.put(i4);
        checkExpect(id4, new OKPutResult(id4.getId()));
        
        checkExpect(la1.get(id1.getId()), new ItemResult(i1));
        checkExpect(la1.get(id2.getId()), new NoItemResult());
        checkExpect(la2.get(id2.getId()), new ItemResult(i2));
        checkExpect(la1.get(id4.getId()), new NoItemResult());
        checkExpect(la2.get(id4.getId()), new NoItemResult());
        checkExpect(la3.get(id4.getId()), new ItemResult(i4));
    }
    
    
    //mehrere Items in ein Archiv speichern
    @Test
    public void putMultipleTest() {
        wsiarchive.IPutResultList resultlist = oa1.putMultiple(il1.toWSIItemList());
        PairPutResultList r1 = (PairPutResultList) resultlist.toMyPutResultList();
        OKPutResult or1 = (OKPutResult) r1.getFirst();
        IItemId id1 = or1.getId();
        
        PairPutResultList r2 = (PairPutResultList) r1.getRest();
        OKPutResult or2 = (OKPutResult) r2.getFirst();
        IItemId id2 = or2.getId();
        
        PairPutResultList r3 = (PairPutResultList) r2.getRest();
        FullPutResult or3 = (FullPutResult) r3.getFirst();        
                
        PairPutResultList r4 = (PairPutResultList) r3.getRest();
        OKPutResult or4 = (OKPutResult) r4.getFirst();
        IItemId id4 = or4.getId();
        
        checkExpect(resultlist, new PairPutResultList(new OKPutResult(id1), 
                                          new PairPutResultList(new OKPutResult(id2), 
                                          new PairPutResultList(new FullPutResult(), 
                                          new PairPutResultList(new OKPutResult(id4), 
                                          new EmptyPutResultList())))).toWSIPutResultList());
                                        }
    
    
}
