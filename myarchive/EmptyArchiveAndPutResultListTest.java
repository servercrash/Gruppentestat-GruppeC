package myarchive;

import org.junit.*;
import wsiarchive.*;

import java.util.Random;

public class EmptyArchiveAndPutResultListTest extends de.tuebingen.informatik.Test {

    // Erstelle eine neue liste
    IArchiveAndPutResultList ea = new EmptyArchiveAndPutResultList();

    // some random generators :)
    public IItemId getRandomId() {
        return ((OKPutResult) new WORM("random").put(new Item("chx", 666))).getId();
    }
    
    public Item getRandomItem() {
        return new Item("random-string", new Random().nextInt(300));
    }

    // teste die methoden
    @Test
    // Gibt ein item anhand seiner id zur√ºck
    public void get() {
        checkExpect(ea.get(this.getRandomId()), new NoItemResult());
    }
    
    @Test
    public void put() {
        checkExpect(ea.put(this.getRandomItem()), new FullPutResult());
    }
    
    @Test
    public void fillData() {
        /*ea.fillData(new EmptyArchiveList()); // es sollte nichts passieren
        checkExpect(eq, new EmptyArchiveAndPutResultListTest());
        
        IArchiveList alist = this.getRandomArchiveList();
        ea.fillData(alist); // es sollte nur random archveliste gespeichert sein.
        */
// @TODO das ist hier nicht so einfach        checkExpect
    }
    
    @Test
    public void getRekursiv() {
        checkExpect(ea.getRekursiv(this.getRandomId()), new NoItemResult());
    }

    @Test
    public void getCache() {
       checkExpect(ea.getCache(this.getRandomId()), new NoItemResult());
    }
}
